{"is_source_file": true, "format": "TypeScript", "description": "A composable module for managing notes, including CRUD operations, filtering, folders, tags, and persistence with local storage. It exposes an interface for interacting with notes data within a Vue.js or similar reactive framework.", "external_files": ["@/types/note", "@/types/folder"], "external_methods": ["useStorage()", "useState()", "watch()", "computed()", "reactive()"], "published": ["useNotes"], "classes": [], "methods": [{"name": "export function useNotes() { useNotes", "description": "Provides a reactive interface for managing notes, including CRUD operations, filtering, folders, and tags, with data persisted in localStorage.", "scope": "", "scopeKind": ""}, {"name": "function addFolder(name: string) { addFolder", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function clearAllFilters() { filters.search = ''; filters.folderId = null; filters.tag = null;/ clearAllFilters", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function clearFolderFilter() { filters.folderId = null } clearFolderFilter", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function clearTagFilter() { filters.tag = null } clearTagFilter", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function createNote() { createNote", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function deleteFolder(id: string) { deleteFolder", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function deleteNote(id: string) { deleteNote", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function moveToFolder(payload: { id: string; folderId: string | null }) { moveToFolder", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function renameFolder(payload: { id: string; name: string }) { renameFolder", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function setActiveNote(id: string) { setActiveNote", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function setFolderFilter(id: string | null) { filters.folderId = id } setFolderFilter", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function setPinnedFilter(val: boolean | null) { filters.pinned = val } setPinnedFilter", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function setSearch(q: string) { filters.search = q } setSearch", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function setTagFilter(tag: string | null) { filters.tag = tag } setTagFilter", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function setTags(payload: { id: string; tags: string[] }) { setTags", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function showUntagged() { filters.untagged = true } showUntagged", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function togglePinned(id: string) { togglePinned", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function updateNote(payload: Note) { updateNote", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["useStorage()", "useState()", "watch()", "computed()", "reactive()"], "search-terms": ["useNotes", "notes_frontend/composables", "localStorage", "note management", "CRUD notes", "filter notes", "folders", "tags", "Vue composable"], "state": 2, "file_id": 12, "knowledge_revision": 25, "git_revision": "", "ctags": [{"_type": "tag", "name": "activeNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const activeNote = computed(() => notes.value.find(n => n.id === activeNoteId.value) || null)$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "addFolder", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function addFolder(name: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "clearAllFilters", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function clearAllFilters() { filters.search = ''; filters.folderId = null; filters.tag = null;/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "clearFolderFilter", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function clearFolderFilter() { filters.folderId = null }$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "clearTagFilter", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function clearTagFilter() { filters.tag = null }$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "counts", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const counts = computed(() => {$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function createNote() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteFolder", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function deleteFolder(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function deleteNote(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "ensureId", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const { getItem, setItem, ensureId } = useStorage()$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "f", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const f = folders.value.find(f => f.id === payload.id)$/", "language": "TypeScript", "kind": "constant", "scope": "renameFolder", "scopeKind": "function"}, {"_type": "tag", "name": "filteredNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const filteredNotes = computed<Note[]>(() => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "filters", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const filters = reactive<{ search: string; folderId: string | null; tag: string | null; pinned/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "getItem", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const { getItem, setItem, ensureId } = useStorage()$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const i = notes.value.findIndex(n => n.id === id)$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const id = ensureId()$/", "language": "TypeScript", "kind": "constant", "scope": "addFolder", "scopeKind": "function"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const id = ensureId()$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const idx = folders.value.findIndex(f => f.id === id)$/", "language": "TypeScript", "kind": "constant", "scope": "deleteFolder", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const idx = notes.value.findIndex(n => n.id === payload.id)$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "moveToFolder", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function moveToFolder(payload: { id: string; folderId: string | null }) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const n = notes.value.find(n => n.id === id)$/", "language": "TypeScript", "kind": "constant", "scope": "togglePinned", "scopeKind": "function"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const n = notes.value.find(n => n.id === payload.id)$/", "language": "TypeScript", "kind": "constant", "scope": "moveToFolder", "scopeKind": "function"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const n = notes.value.find(n => n.id === payload.id)$/", "language": "TypeScript", "kind": "constant", "scope": "setTags", "scopeKind": "function"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const n: Note = { id, title: 'New Note', content: '', createdAt: now, updatedAt: now, tags: /", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const notes = useState<Note[]>('notes', () => [])$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const now = new Date().toISOString()$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "pinned", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const n: Note = { id, title: 'New Note', content: '', createdAt: now, updatedAt: now, tags: /", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "renameFolder", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function renameFolder(payload: { id: string; name: string }) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setActiveNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function setActiveNote(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setFolderFilter", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function setFolderFilter(id: string | null) { filters.folderId = id }$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setItem", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const { getItem, setItem, ensureId } = useStorage()$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setPinnedFilter", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function setPinnedFilter(val: boolean | null) { filters.pinned = val }$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setSearch", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function setSearch(q: string) { filters.search = q }$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setTagFilter", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function setTagFilter(tag: string | null) { filters.tag = tag }$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setTags", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function setTags(payload: { id: string; tags: string[] }) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "showUntagged", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function showUntagged() { filters.untagged = true }$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^      const tags = Array.from(new Set(payload.tags.map(t => t.trim()).filter(Boolean)))$/", "language": "TypeScript", "kind": "constant", "scope": "setTags", "scopeKind": "function"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const n: Note = { id, title: 'New Note', content: '', createdAt: now, updatedAt: now, tags: /", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const n: Note = { id, title: 'New Note', content: '', createdAt: now, updatedAt: now, tags: /", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "togglePinned", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function togglePinned(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "uniqueTags", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  const uniqueTags = computed(() => {$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^  function updateNote(payload: Note) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^    const n: Note = { id, title: 'New Note', content: '', createdAt: now, updatedAt: now, tags: /", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "useNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-159555-159568/notes_frontend/composables/useNotes.ts", "pattern": "/^export function useNotes() {$/", "language": "TypeScript", "kind": "function"}], "hash": "7067ff7ea9ce9d9e1d3ef0c42ceac6d0", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/composables/useNotes.ts", "revision_history": [{"25": ""}]}